=head1 DESCRIPTION
Эта функция должна принять на вход арифметическое выражение,
а на выходе дать ссылку на массив, состоящий из отдельных токенов.
Токен - это отдельная логическая часть выражения: число, скобка или арифметическая операция
В случае ошибки в выражении функция должна вызывать die с сообщением об ошибке
Знаки '-' и '+' в первой позиции, или после другой арифметической операции стоит воспринимать
как унарные и можно записывать как "U-" и "U+"
Стоит заметить, что после унарного оператора нельзя использовать бинарные операторы
Например последовательность 1 + - / 2 невалидна. Бинарный оператор / идёт после использования унарного "-"
=cut

use 5.010;
use strict;
use warnings;
use diagnostics;
BEGIN{
	if ($] < 5.018) {
		package experimental;
		use warnings::register;
	}
}
no warnings 'experimental';

sub tokenize {
	chomp(my $expr = shift);
	my @res;

	next if $expr =~ /^\s*$/;
	$expr=~s/[ ]+//g;
	$expr=~ s/[a-d]|[f-z]//g;
	#$expr=~ s/\.0//g;
	if (($expr =~ /ee+/)|($expr=~ /\.\d+\./)|($expr !~ /[0-9]/))
	{
		die "Error\n";
	}
	$expr=~s/([\+-])([\+-])([\+-])(\d+)/$1U$2U$3$4/g;
	$expr=~s/^([\+-])(\()/U$1(/g;
	$expr=~s/^([\+-])(\d+)/U$1$2/g;
	$expr=~s/([\+-])([\+-])(\d+)/$1U$2$3/g;
	$expr=~s/([\/\*\(\^])([\+-])/$1U$2/g;
	$expr=~s/(?<first>[\+\/\*\^\-])\.(\d+)/$+{first}0.$2/g;
	$expr=~s/0\.(\d+)e([\+\-]\d+|\d+)/$1*(10**($2-1))/ge;
	$expr=~s/(\d+)e([\+\-]\d+|\d+)/$1*(10**$2)/ge;
		
	@res=split /(?:(U\+)|(U\-)|(\*)|(\/)|(\^)|(\()|(\))|(\-)|(\+))/,$expr;
	
	for (my $i=0; $i<= $#res; $i++)
	{		
		if (!defined($res[$i]))
		{
			splice(@res,$i,1);
			$i--;
		}
		elsif($res[$i]=~/^\s*$/)
		{			
			splice(@res,$i,1);
			$i--;
		}
	}	
	return \@res;
}

1;
